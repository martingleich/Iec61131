{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "StructuredText",
	"patterns": [
		{
			"include": "#literal"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		}
	],
	"foldingStartMarker": "",
	"repository": {
		"literal": {
			"patterns": [
				{
					"name": "constant.language.structured-text",
					"match": "\\b(?i)(true|false)\\b"
				},
				{
					"name": "constant.numeric.structured-text",
					"match": "\\b([0-9][0-9_]*(\\.[0-9_]+)?)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.type.structured-text",
					"match": "\\b(?i)(char|lreal|real|lint|dint|int|sint|ulint|udint|uint|usint|lword|dword|word|byte|bool|ltime|time|ldt|dt|ldate|ltod|tod|(pointer(\\s+to)?)|array|of|string)\\b",
					"comment": "Must happen before keyword.control.structured-text because we have to match 'pointer to' before 'to' as keyword."
				},
				{
					"name": "keyword.control.structured-text",
					"match": "\\b(?i)(to|if|then|end_if|elsif|else|while|end_while|repeat|until|end_repeat|exit|continue|return|for|by|end_for|do|case|end_case)\\b"
				},
				{
					"name": "keyword.operator.structured-text",
					"match": "\\b(?i)(and|xor|or|not|sizeof|adr|mod)\\b"
				},
				{ 
					"name": "keyword.other.structured-text",
					"match": "\\b(?i)(constant|type|end_type|struct|end_struct|union|end_union|function|end_function|function_block|end_function_block|var_input|var_global|var_output|var_in_out|var_temp|var_inst|var|end_var)\\b"
				}

			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.structured-text",
					"match": "//.*"
				},
				{
					"name": "comment.block.structured-text",
					"begin": "\\(\\*",
					"end": "\\*\\)"
				}
			]
		}
	},
	"scopeName": "source.structured-text"
}